apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "goci-service.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    type: Service
{{ include "goci-service.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      namespace: {{ .Release.Namespace }}
      app.kubernetes.io/name: {{ include "goci-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }} 
  template:
    metadata:
      labels:
        type: Service
{{ include "goci-service.labels" . | indent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      annotations:
    spec:
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup | default 1000 }}
        runAsUser: {{ .Values.securityContext.runAsUser | default 1000 }}
        runAsGroup: {{ .Values.securityContext.runAsGroup | default 1000 }}
      terminationGracePeriodSeconds: 300
      {{- with .Values.serviceAccountName }}
      serviceAccountName: {{ . }}
      {{- end }}
      containers:
      - name: app
        image: "{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
        ports:
        - name: http
          containerPort: {{ .Values.port | default 8080 }}
          protocol: TCP
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: {{ .Values.health.period | default 10 }}
          httpGet:
            path: {{ .Values.health.path }}
            scheme: {{ .Values.service.scheme }}
            port: http
        readinessProbe:
          initialDelaySeconds: 15
          periodSeconds: {{ .Values.readiness.period | default 30 }}
          httpGet:
            path: {{ .Values.readiness.path }}
            scheme: {{ .Values.service.scheme }}
            port: http
        securityContext:
          allowPrivilegeEscalation: false
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- with .Values.extraVolumeMounts }}
        volumeMounts:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.envVars }}
        env:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        envFrom:
        - secretRef:
            name: {{ include "goci-service.fullname" . }}
        {{- if .Values.configMap.enabled }}
        - configMapRef:
            name: {{ .Values.configMap.name | default .Release.Name }}
        {{- end }}
        {{- with .Values.envFrom }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.extraVolumes }}
      volumes:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 6 }}
      {{- end }}
